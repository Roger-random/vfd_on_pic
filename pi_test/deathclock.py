# Death Clock control program for Raspberry Pi
# Uses Pi GPIO library http://abyz.me.uk/rpi/pigpio
# Run "sudo pigpiod" before launching

import pigpio
import time

all_black = b'\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF'

eye_open  = b'\xFF\x03\x9C\x03\xFF\x03\xFF\x03\xFF\x03\x9C\x03\xFF\x03\xFF\x03'
eye_smile = b'\xFF\x03\xDC\x03\xFF\x03\xFF\x03\xFF\x03\xDC\x03\xFF\x03\xFF\x03'
eye_sleep = b'\xFF\x03\x9D\x03\xFF\x03\xFF\x03\xFF\x03\x9D\x03\xFF\x03\xFF\x03'
eye_close = b'\xFF\x03\xBF\x03\xFF\x03\xFF\x03\xFF\x03\xBF\x03\xFF\x03\xFF\x03'

smile_l   = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xF7\x03\xFF\x03\xFF\x03\xFF\x03'
smile_r   = b'\xFF\x03\xFF\x03\xF7\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'

sun       = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x02\xFF\x03'
mon       = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x02\xFF\x03\xFF\x03'
tue       = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x02\xFF\x03\xFF\x03\xFF\x03'
wed       = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x02\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
thu       = b'\xFF\x03\xFF\x03\xFF\x02\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
fri       = b'\xFF\x03\xFF\x02\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
sat       = b'\xFF\x02\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'

weekday = (sun, mon, tue, wed, thu, fri, sat)

am        = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFB\x03\xFF\x03'
pm        = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xF7\x03\xFF\x03'

on        = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFB\x03'
off       = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xF7\x03'

otr       = b'\xFE\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
clock     = b'\xFD\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
ch        = b'\xFB\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
dot       = b'\xF7\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
w         = b'\x7F\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'

num1      = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\x7F\x03'
num2      = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\x7F\x03\xFF\x03'
num3      = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\x7F\x03\xFF\x03\xFF\x03'
num4      = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\x7F\x03\xFF\x03\xFF\x03\xFF\x03'
num5      = b'\xFF\x03\xFF\x03\xFF\x03\x7F\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
num6      = b'\xFF\x03\xFF\x03\x7F\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'
num7      = b'\xFF\x03\x7F\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03'

numbers = (all_black, num1, num2, num3, num4, num5, num6, num7)

rectr     = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFE\x03'
rectl     = b'\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFF\x03\xFD\x03'

class deathclock:
  def __init__(self):
    self.pi = pigpio.pi()
    if self.pi.connected:
      print("Pi GPIO connected, will send bytes via I2C")
      self.p = self.pi.i2c_open(1,0x42)
    else:
      print("Pi GPIO not connected, will print byte patterns")
    # Initialize screen to all black
    self.send(0x00,b'\x08\x0A\x20\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF')

  def send(self, offset, pattern):
    if self.pi.connected:
      self.pi.i2c_write_i2c_block_data(self.p,offset,pattern)
    else:
      print("Offset {} Data {}".format(offset, ''.join('{:02x}'.format(x) for x in pattern)))

  def run(self):
    print("Nothing yet...")

if __name__ == "__main__":
  dc = deathclock()
  dc.run()
